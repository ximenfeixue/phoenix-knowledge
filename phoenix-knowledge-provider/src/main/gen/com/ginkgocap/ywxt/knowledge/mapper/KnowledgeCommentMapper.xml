<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ginkgocap.ywxt.knowledge.mapper.KnowledgeCommentMapper" >
  <resultMap id="BaseResultMap" type="com.ginkgocap.ywxt.knowledge.entity.KnowledgeComment" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="knowledge_id" property="knowledgeId" jdbcType="BIGINT" />
    <result column="content" property="content" jdbcType="VARCHAR" />
    <result column="createtime" property="createtime" jdbcType="TIMESTAMP" />
    <result column="status" property="status" jdbcType="BIT" />
    <result column="parentid" property="parentid" jdbcType="BIGINT" />
    <result column="user_id" property="userId" jdbcType="BIGINT" />
    <result column="count" property="count" jdbcType="BIGINT" />
    <result column="username" property="username" jdbcType="VARCHAR" />
    <result column="pic" property="pic" jdbcType="VARCHAR" />
  </resultMap>
	<resultMap id="CommentQueryMap" type="com.ginkgocap.ywxt.knowledge.entity.KnowledgeCommentQuery" >
		<id column="id" property="id" />
		<result column="knowledgeId" property="knowledgeId" />
		<result column="knowledgeTitle" property="knowledgeTitle" />
		<result column="content" property="content" />
		<result column="createTime" property="createTime" />
		<result column="status" property="status" />
		<result column="parentId" property="parentId" />
		<result column="parentContent" property="parentContent" />
		<result column="userId" property="userId" />
		<result column="count" property="count" />
		<result column="userName" property="userName" />
		<result column="pic" property="pic" />
		<result column="isVisible" property="isVisible" />
		<result column="deleteTime" property="deleteTime" />
	</resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, knowledge_id, content, createtime, status, parentid, user_id, count, username, 
    pic
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.ginkgocap.ywxt.knowledge.entity.KnowledgeCommentExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from tb_knowledge_comment
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
      <if test="limitStart >= 0 and limitEnd>= 0" >
        limit #{limitStart}, #{limitEnd}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from tb_knowledge_comment
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from tb_knowledge_comment
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.ginkgocap.ywxt.knowledge.entity.KnowledgeCommentExample" >
    delete from tb_knowledge_comment
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.ginkgocap.ywxt.knowledge.entity.KnowledgeComment" >
    insert into tb_knowledge_comment (id, knowledge_id, content, 
      createtime, status, parentid, 
      user_id, count, username, 
      pic)
    values (#{id,jdbcType=BIGINT}, #{knowledgeId,jdbcType=BIGINT}, #{content,jdbcType=VARCHAR}, 
      #{createtime,jdbcType=TIMESTAMP}, #{status,jdbcType=BIT}, #{parentid,jdbcType=BIGINT}, 
      #{userId,jdbcType=BIGINT}, #{count,jdbcType=BIGINT}, #{username,jdbcType=VARCHAR}, 
      #{pic,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.ginkgocap.ywxt.knowledge.entity.KnowledgeComment" >
    insert into tb_knowledge_comment
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="knowledgeId != null" >
        knowledge_id,
      </if>
      <if test="content != null" >
        content,
      </if>
      <if test="createtime != null" >
        createtime,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="parentid != null" >
        parentid,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="count != null" >
        count,
      </if>
      <if test="username != null" >
        username,
      </if>
      <if test="pic != null" >
        pic,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="knowledgeId != null" >
        #{knowledgeId,jdbcType=BIGINT},
      </if>
      <if test="content != null" >
        #{content,jdbcType=VARCHAR},
      </if>
      <if test="createtime != null" >
        #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null" >
        #{status,jdbcType=BIT},
      </if>
      <if test="parentid != null" >
        #{parentid,jdbcType=BIGINT},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="count != null" >
        #{count,jdbcType=BIGINT},
      </if>
      <if test="username != null" >
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="pic != null" >
        #{pic,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.ginkgocap.ywxt.knowledge.entity.KnowledgeCommentExample" resultType="java.lang.Integer" >
    select count(*) from tb_knowledge_comment
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update tb_knowledge_comment
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.knowledgeId != null" >
        knowledge_id = #{record.knowledgeId,jdbcType=BIGINT},
      </if>
      <if test="record.content != null" >
        content = #{record.content,jdbcType=VARCHAR},
      </if>
      <if test="record.createtime != null" >
        createtime = #{record.createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.status != null" >
        status = #{record.status,jdbcType=BIT},
      </if>
      <if test="record.parentid != null" >
        parentid = #{record.parentid,jdbcType=BIGINT},
      </if>
      <if test="record.userId != null" >
        user_id = #{record.userId,jdbcType=BIGINT},
      </if>
      <if test="record.count != null" >
        count = #{record.count,jdbcType=BIGINT},
      </if>
      <if test="record.username != null" >
        username = #{record.username,jdbcType=VARCHAR},
      </if>
      <if test="record.pic != null" >
        pic = #{record.pic,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update tb_knowledge_comment
    set id = #{record.id,jdbcType=BIGINT},
      knowledge_id = #{record.knowledgeId,jdbcType=BIGINT},
      content = #{record.content,jdbcType=VARCHAR},
      createtime = #{record.createtime,jdbcType=TIMESTAMP},
      status = #{record.status,jdbcType=BIT},
      parentid = #{record.parentid,jdbcType=BIGINT},
      user_id = #{record.userId,jdbcType=BIGINT},
      count = #{record.count,jdbcType=BIGINT},
      username = #{record.username,jdbcType=VARCHAR},
      pic = #{record.pic,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.ginkgocap.ywxt.knowledge.entity.KnowledgeComment" >
    update tb_knowledge_comment
    <set >
      <if test="knowledgeId != null" >
        knowledge_id = #{knowledgeId,jdbcType=BIGINT},
      </if>
      <if test="content != null" >
        content = #{content,jdbcType=VARCHAR},
      </if>
      <if test="createtime != null" >
        createtime = #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=BIT},
      </if>
      <if test="parentid != null" >
        parentid = #{parentid,jdbcType=BIGINT},
      </if>
      <if test="userId != null" >
        user_id = #{userId,jdbcType=BIGINT},
      </if>
      <if test="count != null" >
        count = #{count,jdbcType=BIGINT},
      </if>
      <if test="username != null" >
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="pic != null" >
        pic = #{pic,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ginkgocap.ywxt.knowledge.entity.KnowledgeComment" >
    update tb_knowledge_comment
    set knowledge_id = #{knowledgeId,jdbcType=BIGINT},
      content = #{content,jdbcType=VARCHAR},
      createtime = #{createtime,jdbcType=TIMESTAMP},
      status = #{status,jdbcType=BIT},
      parentid = #{parentid,jdbcType=BIGINT},
      user_id = #{userId,jdbcType=BIGINT},
      count = #{count,jdbcType=BIGINT},
      username = #{username,jdbcType=VARCHAR},
      pic = #{pic,jdbcType=VARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
	<select id="getCommentByPage" resultMap="CommentQueryMap" parameterType="java.util.Map" >
		SELECT DISTINCT c.id,
			c.knowledge_id AS knowledgeId,
			k.title AS knowledgeTitle,
			c.content,
			c.createtime AS createTime,
			c.status,
			c.parentid as parentId,
			(SELECT t.content FROM tb_knowledge_comment t WHERE t.id=c.parentid) AS parentContent,
			c.user_id AS userId,
			c.username AS userName,
			c.pic,
			c.is_visible AS isVisible,
			c.delete_time AS deleteTime
		FROM tb_knowledge_comment c, tb_knowledge_base k
		WHERE k.knowledge_id = c.knowledge_id
		<if test="keyword != null" >
			AND c.content LIKE '%'||#{keyword}||'%'
		</if>
		<if test="isVisible != null" >
			AND c.is_visible = #{isVisible},
		</if>
		ORDER BY c.createtime
		LIMIT #{start}, #{size}
	</select>
	
	<select id="getCommentCount" parameterType="java.util.Map" resultType="java.lang.Integer" >
		SELECT count(*)
		FROM tb_knowledge_comment c
		WHERE 1=1
		<if test="keyword != null" >
			AND c.content LIKE '%'||#{keyword}||'%'
		</if>
		<if test="isVisible != null" >
			AND c.is_visible = #{isVisible}
		</if>
	</select>
	
	<update id="deleteComment" parameterType="java.util.List" >
		UPDATE tb_knowledge_comment
		SET status = 0,
			delete_time = NOW(),
			delete_user_id = #{userId},
			delete_user_name = #{userName}
		WHERE id IN
		<foreach collection="idList" item="item" open="(" separator="," close=")">
			#{item}
		</foreach>
	</update>
	<delete id="deleteCommentCompletely" parameterType="java.util.List" >
		DELETE FROM tb_knowledge_comment
		WHERE id IN
		<foreach collection="idList" item="item" open="(" separator="," close=")">
			#{item}
		</foreach>
	</delete>
	<update id="recoverDeletedComment" parameterType="java.util.List" >
		UPDATE tb_knowledge_comment
		SET status = 1
		WHERE id IN
		<foreach collection="idList" item="item" open="(" separator="," close=")">
			#{item}
		</foreach>
	</update>
	<update id="invisibleComment" parameterType="java.util.List" >
		UPDATE tb_knowledge_comment
		SET is_visible = 0
		WHERE id IN
		<foreach collection="idList" item="item" open="(" separator="," close=")">
			#{item}
		</foreach>
	</update>
	<update id="recoverInvisibleComment" parameterType="java.util.List" >
		UPDATE tb_knowledge_comment
		SET is_visible = 1
		WHERE id IN
		<foreach collection="idList" item="item" open="(" separator="," close=")">
			#{item}
		</foreach>
	</update>
</mapper>